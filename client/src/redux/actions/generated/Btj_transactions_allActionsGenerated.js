/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN Btj_transactions_allActionsGenerated.js PLEASE EDIT ../Btj_transactions_allActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import Btj_transactions_allApi from "../../../api/Btj_transactions_allApi";

let actionsFunction = {

  //CRUD METHODS

  // Create btj_transactions_all
  createBtj_transactions_all: function(btj_transactions_all) {
    return function(dispatch) {
      return Btj_transactions_allApi
        .createBtj_transactions_all(btj_transactions_all)
        .then(btj_transactions_all => {
          dispatch(actionsFunction.createBtj_transactions_allSuccess(btj_transactions_all));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createBtj_transactions_allSuccess: function(btj_transactions_all) {
    return { type: types.CREATE_BTJ_TRANSACTIONS_ALL_SUCCESS, payload: btj_transactions_all };
  },


  // Delete btj_transactions_all
  deleteBtj_transactions_all: function(id) {
    return function(dispatch) {
      return Btj_transactions_allApi
        .deleteBtj_transactions_all(id)
        .then(btj_transactions_all => {
          dispatch(actionsFunction.deleteBtj_transactions_allSuccess(btj_transactions_all));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteBtj_transactions_allSuccess: function(btj_transactions_all) {
    return { type: types.DELETE_BTJ_TRANSACTIONS_ALL_SUCCESS, payload: btj_transactions_all };
  },


  // Get btj_transactions_all
  loadBtj_transactions_all: function(id) {
    return function(dispatch) {
      return Btj_transactions_allApi
        .getOneBtj_transactions_all(id)
        .then(btj_transactions_all => {
          dispatch(actionsFunction.loadBtj_transactions_allSuccess(btj_transactions_all));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadBtj_transactions_allSuccess: function(btj_transactions_all) {
    return { type: types.GET_BTJ_TRANSACTIONS_ALL_SUCCESS, payload: btj_transactions_all };
  },

  // Load  list
  loadBtj_transactions_allList: function() {
    return function(dispatch) {
      return Btj_transactions_allApi
        .getBtj_transactions_allList()
        .then(list => {
          dispatch(actionsFunction.loadBtj_transactions_allListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadBtj_transactions_allListSuccess: function(list) {
    return { type: types.LIST_BTJ_TRANSACTIONS_ALL_SUCCESS, payload: list };
  },

	
  // Save btj_transactions_all
  saveBtj_transactions_all: function(btj_transactions_all) {
    return function(dispatch) {
      return Btj_transactions_allApi
        .saveBtj_transactions_all(btj_transactions_all)
        .then(btj_transactions_all => {
          dispatch(actionsFunction.saveBtj_transactions_allSuccess(btj_transactions_all));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveBtj_transactions_allSuccess: function(btj_transactions_all) {
    return { type: types.UPDATE_BTJ_TRANSACTIONS_ALL_SUCCESS, payload: btj_transactions_all };
  },


};

export default actionsFunction;
