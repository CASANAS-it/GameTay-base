openapi: 3.0.0
info:
  title: GameTayo
  description: You can obtain JWT token from login API
  version: 0.1
servers:
  - url: http://localhost:3000/api
    description: Local server for testing
paths:
  /login:
    post:
      summary: Login API
      security: []   # No security
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:      # Request body contents
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              example:   # Sample object
                username: admin
                password: 62f264d7ad826f02a8af714c0a54b197935b717656b80461686d450f7b3abde4c553541515de2052b9af70f710f0cd8a1a2d3f4d60aa72608d71a63a9a93c0f5
      responses:
        '200':
          description: OK
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /verifyToken:
    post:
      summary: Verify token API
      security: [] #No security
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /changePassword:
    post:
      summary: Change password API
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                passwordNew:
                  type: string
                passwordOld:
                  type: string
      responses:
        '200':
          description: OK
                

  #-----  User  -----
  /user/{id}/changePassword:
    post:
      summary: Change password of user from admin
      tags:
        - User
      responses:
        "200":
          description: OK
    
  /user/:
    post:
      summary: CRUD ACTION create
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                name:
                  type: string
                password:
                  type: string
                roles:
                  type: string
                surname:
                  type: string
                username:
                  type: string
    get:
      summary: CRUD ACTION list
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    
  /user/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    post:
      summary: CRUD ACTION update
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
    
  #-----  btj_draws  -----
  /btj_draws/:
    post:
      summary: CRUD ACTION create
      tags:
        - btj_draws
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_draws"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                allocated_percentage:
                  type: number
                amount:
                  type: number
                draw_date:
                  type: integer
                draw_result:
                  type: string
                game_type:
                  type: string
                merchant_percentage:
                  type: number
    get:
      summary: CRUD ACTION list
      tags:
        - btj_draws
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/btj_draws"
    
  /btj_draws/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - btj_draws
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - btj_draws
      parameters:
        - name: id
          in: path
          description: Id resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_draws"
    post:
      summary: CRUD ACTION update
      tags:
        - btj_draws
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_draws"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/btj_draws"
    
  #-----  btj_game_settings  -----
  /btj_game_settings/:
    post:
      summary: CRUD ACTION create
      tags:
        - btj_game_settings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_game_settings"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amt_per_unit:
                  type: number
                no_of_picks:
                  type: integer
                status:
                  type: string
                transtype:
                  type: string
    get:
      summary: CRUD ACTION list
      tags:
        - btj_game_settings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/btj_game_settings"
    
  /btj_game_settings/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - btj_game_settings
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - btj_game_settings
      parameters:
        - name: id
          in: path
          description: Id resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_game_settings"
    post:
      summary: CRUD ACTION update
      tags:
        - btj_game_settings
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_game_settings"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/btj_game_settings"
    
  #-----  btj_merchants  -----
  /ntj_merchants/:
    post:
      summary: CRUD ACTION create
      tags:
        - btj_merchants
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_merchants"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                creation_date:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                middle_initial:
                  type: string
                mobilenum:
                  type: string
                percentage:
                  type: number
                status:
                  type: string
    get:
      summary: CRUD ACTION list
      tags:
        - btj_merchants
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/btj_merchants"
    
  /ntj_merchants/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - btj_merchants
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - btj_merchants
      parameters:
        - name: id
          in: path
          description: Id resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_merchants"
    post:
      summary: CRUD ACTION update
      tags:
        - btj_merchants
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_merchants"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/btj_merchants"
    
  #-----  btj_transactions_all  -----
  /btj_transactions_all/:
    post:
      summary: CRUD ACTION create
      tags:
        - btj_transactions_all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_transactions_all"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                lastupdate:
                  type: integer
                lucky:
                  type: boolean
                merchant_code:
                  type: string
                mobilenum:
                  type: string
                pickno_1:
                  type: number
                pickno_2:
                  type: number
                pickno_3:
                  type: number
                pickno_4:
                  type: number
                refnum:
                  type: string
                status:
                  type: string
                transbody:
                  type: string
                transdate:
                  type: integer
                transtype:
                  type: string
    get:
      summary: CRUD ACTION list
      tags:
        - btj_transactions_all
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/btj_transactions_all"
    
  /btj_transactions_all/{id}:
    delete:
      summary: CRUD ACTION delete
      tags:
        - btj_transactions_all
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
    get:
      summary: CRUD ACTION get
      tags:
        - btj_transactions_all
      parameters:
        - name: id
          in: path
          description: Id resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_transactions_all"
    post:
      summary: CRUD ACTION update
      tags:
        - btj_transactions_all
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/btj_transactions_all"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/btj_transactions_all"
    
    
  #-----  User  -----
  /Users/{id}/changePassword:
    post:
      summary: Change password by admin API
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                passwordNew:
                  type: string
                passwordAdmin:
                  type: string
      responses:
        '200':
          description: OK
  /Users/{id}:
    post:
      summary: Update User API
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
    delete:
      summary: Delete User API
      tags:
        - User
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /Users:
    post:
      summary: Create User API
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: 'string'
                password: 
                  type: 'string'
                mail: 
                  type: 'string'
                name: 
                  type: 'string'
                surname: 
                  type: 'string'
                roles: 
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    
# JWT security
security:
  - bearerAuth: [] 
  
  
# Components
components:

  # Security
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

  # Data Model
  schemas:
    User:
      properties:
        username:
          type: 'string'
        password: 
          type: 'string'
        mail: 
          type: 'string'
        name: 
          type: 'string'
        surname: 
          type: 'string'
        roles: 
          type: array
          items:
            type: string
      required:
        - username
        - password
        

    User:
      properties:
        _id:
          type: string
        mail:
          type: string
        name:
          type: string
        password:
          type: string
        roles:
          type: string
        surname:
          type: string
        username:
          type: string
      required:
        -  _id
        - password
        - username
      
    
    btj_draws:
      properties:
        _id:
          type: string
        allocated_percentage:
          type: number
        amount:
          type: number
        draw_date:
          type: integer
        draw_result:
          type: string
        game_type:
          type: string
        merchant_percentage:
          type: number
      required:
        -  _id
      
    
    btj_game_settings:
      properties:
        _id:
          type: string
        amt_per_unit:
          type: number
        no_of_picks:
          type: integer
        status:
          type: string
        transtype:
          type: string
      required:
        -  _id
        - amt_per_unit
        - no_of_picks
        - status
        - transtype
      
    
    btj_merchants:
      properties:
        _id:
          type: string
        code:
          type: string
        creation_date:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        middle_initial:
          type: string
        mobilenum:
          type: string
        percentage:
          type: number
        status:
          type: string
      required:
        -  _id
        - code
        - creation_date
        - first_name
        - last_name
        - middle_initial
        - mobilenum
        - percentage
        - status
      
    
    btj_transactions_all:
      properties:
        _id:
          type: string
        amount:
          type: number
        lastupdate:
          type: integer
        lucky:
          type: boolean
        merchant_code:
          type: string
        mobilenum:
          type: string
        pickno_1:
          type: number
        pickno_2:
          type: number
        pickno_3:
          type: number
        pickno_4:
          type: number
        refnum:
          type: string
        status:
          type: string
        transbody:
          type: string
        transdate:
          type: integer
        transtype:
          type: string
      required:
        -  _id
        - amount
        - merchant_code
        - mobilenum
        - pickno_1
        - pickno_2
        - transtype
      
    
